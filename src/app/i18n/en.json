{
    "lang": "en",
    "home": "Home",
    "projects": "Projects",
    "about": "About",
    "contact": "Contact",
    "welcome": "Hi there!",
    "starttext": "I'm Justus, a passionate full-stack developer who loves turning ideas into interactive, user-friendly applications. Explore my work and discover how I bring creativity and code together on the Projects page. Let's build something amazing together!",
    "getstarted": "Let's get started",
    "scrolldown": "Scroll up to get started",
    "frontend": "As a front-end developer, I focus on building responsive and user-friendly interfaces using React, Next.js, and Tailwind CSS. My goal is to create intuitive, visually appealing web applications that deliver a seamless user experience across devices.",
    "backend": "I specialize in building robust backend systems with Node.js, Express, Django, and databases like MongoDB and MySQL. With Redis for caching, I focus on optimizing performance and ensuring seamless functionality across applications. My goal is to deliver secure and efficient server-side solutions.",
    "wn": "What's next?",
    "coll": "Feel free to explore my projects, learn more about my work, or get in touch if you're interested in collaborating!",
    "subject": "Subject",
    "mess": "Message",
    "send": "Send",
    "iag":"I agree to the processing of my data.",
    "pp": "Privacy Policy",
    "imprint": "Imprint",
    "owner": "Owner",
    "address": "Adress",
    "phone": "Phone",

    "project1_headline": "Customer Management System",
    "project1_text": "When I started learning Django, I aimed to build a customer management system for my fictional web design agency, nofrog. This backend-focused project includes features like authentication, real-time chat, project-specific pinboards, and document storage. It uses simple CSS for styling and has no mobile version. Transitioning from MongoDB to relational databases and implementing WebSockets were exciting challenges.",
    "project2_headline": "NoFrog Webdesign Homepage",
    "project2_text": "This is the homepage for my fictional web development agency 'nofrog', featuring smooth animations, a contact form, and a system to track request statuses. Through this project, I learned Node.js/Express fundamentals and MongoDB integration. The app is built with React, utilizing React Router, and offers a fully responsive design optimized for mobile devices.",
    "project3_headline": "Rocket Game",
    "project3_text": "This app features a simple and entertaining rocket game coded in vanilla JavaScript. Players maneuver the rocket using the WASD keys to navigate between obstacles while collecting as many coins as possible. Multiple levels increase the game's difficulty as you progress. Developing the rocket game helped me practice Node.js/Express and introduced me to Redis during deployment. Give it a try‚Äîit‚Äôs a lot of fun!",
    "project4_headline": "Portfolio",
    "project4_text": "I designed my portfolio page to combine an appealing layout with an SEO-friendly approach, which is why I chose Next.js, a framework built on React. Learning about different rendering techniques and implementing a custom authentication system from scratch was challenging but rewarding. This project significantly enhanced my React skills while deepening my understanding of core authentication concepts and cookie handling.",
    "ht": "Hi there! I'm excited to share my projects with you!",
    "am": "About me",
    "introduction": "Hi there! I'm a 18-year-old aspiring software engineer and full-stack web developer based in Munich, Germany, passionate about creating innovative and scalable solutions for real-world challenges. I thrive on learning new technologies and refining my skills to tackle complex problems. My goal is to build impactful applications that make a difference.",
    "location": "üìç Munich, Germany",
    "profession": "üíº Fullstack",
    "mj": "My journey:",
    "jan24": "January 2024",
    "jan24t": "I began learning programming fundamentals using Python",
    "mar24": "March 2024",
    "mar24t": "I dived into frontend web development, focusing on HTML and CSS",
    "apr24": "April 2024",
    "apr24t": "I started exploring JavaScript to create engaging, interactive designs",
    "jun24": "June 2024",
    "jun24t": "I continued advancing in frontend web development by choosing React as a robust framework. Additionally, I searched for more efficient ways to style websites",
    "aug24": "August 2024",
    "aug24t": "Designing websites felt rewarding, but I wanted a minimalist approach to building fully-featured web apps. Learning Node.js and Express, along with MongoDB, seemed like the right choice, even though it was more challenging than starting with Django",
    "oct24": "October 2024",
    "oct24t": "I realized that managing complex web apps with Node.js and Express could be overwhelming. To simplify, I began studying Django with the goal of building a customer management system for a fictional web development agency",
    "dec24": "December 2024",
    "dec24t": "As the year ended, I recognized the importance of enhancing my security skills. I learned about various hacking techniques, including SQL injection, XSS, and CSRF attacks",
    "jan25": "January 2025",
    "jan25t": "To adopt a more SEO-friendly approach with React, I started learning Next.js. I also explored Redis while implementing i.e. session authentication for my applications",
    "may25": "May 2025",
    "may25t": "Inspired by recent advancements in AI, I worked with the OpenAI API and Langchain (Python), developing several practical applications.",
    "specialization": "I specialize in both front-end and back-end development, working with technologies like HTML, CSS, Tailwind CSS, JavaScript, React, and Next.js to craft seamless user experiences. On the back end, I utilize MongoDB, Node.js, Django, MySQL, and Redis to build secure and efficient systems.",
    "personalProjects": "Although I‚Äôm still early in my journey, I‚Äôve dedicated myself to building a strong foundation by tackling real-world challenges through personal projects. You can explore some of the things I‚Äôve worked on ",
    "ppp": "here.",
    "goal": "My goal is to grow as a developer, learn cutting-edge technologies, and contribute to meaningful projects. If you're looking for someone who‚Äôs driven, curious, and ready to take on new challenges, I‚Äôd love to connect!",
    "ccc": "I‚Äôd love to hear from you! Whether you have a question, feedback, or want to discuss a project, feel free to reach out. Just use the form below or email me directly, and I‚Äôll get back to you as soon as I can.",
    
  "privacyTitle": "Privacy Policy",
  "generalInfoTitle": "1. General Information",
  "generalInfoText": "We take the protection of your data very seriously and treat your personal data confidentially and in accordance with legal regulations.",
  
  "cookiesTitle": "2. Use of Cookies",
  "cookiesText": "We use cookies solely for authentication purposes. This means that we only set cookies when you log in to our website or start a session. These cookies are necessary for you to use the website and allow us to identify you during your visit.",
  "cookiesType": "Type of Cookies: Session Cookies",
  "cookiesPurpose": "Purpose: Authentication and Session Management",
  "cookiesDuration": "Storage Duration: Until the end of your session or a maximum of 1 hour",
  
  "contactFormTitle": "3. Contact Form",
  "contactFormText": "If you use the contact form on our website to send us a message, the data entered there (e.g. name, email address, subject, and message) will only be used to process your request.",
  "contactFormDataUse": "The data will never be shared with third parties without your explicit consent. After submitting the form, your request will be sent to us via email (and possibly to the email address you provided). We will store this data only for as long as necessary to process your request.",
  
  "dataDisclosureTitle": "4. Data Disclosure",
  "dataDisclosureText": "We do not disclose your data to third parties unless it is required to process your request or there is a legal obligation to do so. In no case do we sell your personal data.",
  
  "rightsTitle": "5. Your Rights",
  "rightsText": "You have the right to obtain information about the personal data we have stored about you at any time and to request the correction, deletion, or restriction of the processing of your data.",
  
  "policyChangesTitle": "6. Changes to the Privacy Policy",
  "policyChangesText": "We reserve the right to adjust this privacy policy if necessary, in order to align it with new legal requirements or technical developments. The latest version can always be found on this page.",
  
  "contactTitle": "7. Contact",
  "contactText": "If you have any questions regarding the privacy policy or your personal data, you can contact us at the following email address:",
  "email": "justus.webdev@gmail.com",
  "cmsTitle": "Customer Management System",
  "cmsDescription": "The nofrog Customer Management System is designed to help my fictitious web development agency manage client interactions and projects. The app includes features for project management, real-time chat, and more. It also allows you to make announcements to clients and store documents online, which can be shared with all project members. This system streamlines communication and collaboration, making it easier to manage and track project progress.",
  
  "cmsLearning": "Developing the app has taught me a lot about relational databases and the Django framework. Building the chat feature also improved my WebSocket skills. Since I learned programming fundamentals in Python, I especially enjoyed working with Django, particularly because of its simple authentication system. Although the main focus of the website is on backend architecture, the app only includes basic CSS design. This experience has helped me deepen my understanding of backend development and real-time communication. However, this was my first full-stack project, which taught me all the necessary techniques and concepts step by step ‚Äì and it's certainly not perfect. üòâ",
  
  "cmsYourTurnTitle": "Now it is your turn!",
  "cmsTryApp": "Try the app using the following login credentials:",
  "cmsUsername": "Username",
  "cmsPassword": "Password",
  
  "exploreApp": "Explore the app!",
  "nofrogTitle": "NoFrog Homepage",
  "nofrogDescription": "When I started learning React, I envisioned creating a sleek landing page with animations to enhance the user experience. To bring this idea to life, I developed a landing page for my fictitious web development agency, nofrog. The app includes engaging animations, a contact form, and a feature to track the status of user requests. This project helped me improve my understanding of front-end design principles and the power of React for interactive interfaces.",
  
  "nofrogLearning": "Developing the app taught me a great deal about React and its core concepts, as well as Node/Express backend architecture and the MongoDB database. It was my first foray into backend development and proved to be quite challenging, as building backends with Express turned out to be more difficult than I had anticipated‚Äîand more complex compared to Django. However, this experience greatly enhanced my understanding of full-stack development and the interplay between frontend and backend systems.",
  
  "nofrogTechTitle": "Technologies used:",
  
  "rg": "The rocket game",

  "startHighscore": "Can you beat ",
  "midH": " highscore of ",
  "endH": " coins?",
  "rgdesc": "The rocket game is a fun and fast-paced browser-based game where players control a rocket using the WASD keys, navigating through obstacles while collecting coins. Each level introduces more challenging obstacles, making the game progressively harder as players advance. The goal is to avoid collisions and collect as many coins as possible to achieve the highest score. It‚Äôs an excellent way for players to test their reflexes and coordination in a casual, engaging setting. The game‚Äôs simple mechanics, combined with its addictive nature, make it a great example of interactive web-based gaming.",
  "rgdesc2": "In the Rocket Game project, I used vanilla JavaScript to create the game mechanics and interactions. The game relies on HTML5 for the structure and CSS for styling and responsive design. Node.js and Express were employed to handle the backend logic, providing a server for the game. Additionally, Redis was integrated for session management, allowing the game to store high scores and player data across sessions. This combination of technologies helped create an engaging, interactive experience while also providing a solid backend infrastructure.",
  "note": "Note: Loading the page may take a up to 50 seconds.",
  "mpp": "My Portfolio Page",
  "portdesc": "Building my portfolio page with Next.js and Tailwind CSS was an exciting challenge that pushed my skills to the next level. The project helped me deepen my understanding of React's ecosystem while exploring Next.js features like server-side rendering and dynamic routing. Tailwind CSS allowed me to efficiently create a clean, responsive design, ensuring the portfolio looks great on any device. This project also gave me the opportunity to implement a custom authentication system for added security, where I learned a lot about cookie handling and protecting sensitive data. Overall, creating this page not only showcased my technical expertise but also demonstrated my ability to design a user-friendly and SEO-optimized web application.",
  "techs": "Technologies in use:",
  "aatitle": "Academy App",
  "aa_headline": "Academy App",
  "aa_text": "The Academy App is a web application designed to sell educational content on computer science topics. I built the platform entirely by myself, starting with a user login system using Next.js and Redis, along with a custom Django API. Of course, there is also a separate area for administrators that allows them to manage the content. Through this project, I was able to significantly enhance my backend knowledge, and I also gained valuable experience with Stripe. Additionally, the app features a fully responsive design.",
  "aaDescription": "The Academy is a platform that enables users to explore educational content in the field of computer science and further their knowledge while providing an intuitive user interface for a seamless experience. With the integration of a Stripe subscription model, payments are processed securely and automatically, allowing users to focus entirely on their courses. The platform also offers the ability to store purchased content in a personal user account, along with various editing functions that allow courses to be managed and customized flexibly. A secure login area ensures the protection of all user data and guarantees that only authorized individuals have access to their content. Additionally, an admin dashboard is available for product administrators to manage new courses, update existing offerings, and further develop the platform.",
  "aaLearning": "Developing the app was a valuable experience that provided me with deeper insights into modern web technologies and scalable architectures. The integration of Stripe taught me how to seamlessly incorporate payment systems into an application, while I also expanded my understanding of Redis as a powerful in-memory data store. A key aspect of the project was designing scalable systems, where I worked with Docker to efficiently deploy containerized applications. Additionally, I delved into Cloudflare R2 and AWS S3 Storage to ensure high-performance and reliable storage for large amounts of data. Another highlight was building a custom API that efficiently processes requests and enables secure communication between the frontend and backend. I further deepened my knowledge of Next.js and implemented a fully custom authentication system in the backend, tailored specifically to the app's requirements. My backend development experience with Django also grew, particularly in connecting an API to a PostgreSQL database for efficient and scalable data management. The technological foundation was complemented by Tailwind CSS, which allowed me to design a modern and flexible user interface with minimal overhead. This project was not only a technical challenge but also an opportunity to expand my knowledge of cutting-edge web technologies while developing a system that combines performance, scalability, and security.",
  "aaYourTurnTitle": "Try out the app using the following test payment details:",
  "aaCardNumber": "Card number: 4242 4242 4242 4242",
  "aaInfo": "Valid until: 12/34, CVC: 123",
  "more": "More",
  "wstitle": "Webscraper",
  "wsDescription": "A simple recursive web crawler that scans websites, extracts key text elements (like paragraphs), and identifies contact information using a basic algorithm. The crawler is a console-based application where users can input a URL and choose a scraping mode (e.g., 'contact'). It then crawls the site, printing results such as phone numbers, emails, and social media profiles directly in the console. Additionally, it integrates with the OpenAI API to generate smart summaries of website content.",
  "wsLearning":"In this project, I developed a recursive web crawler using Node.js that extracts key content from websites and identifies contact information such as email addresses, phone numbers, or social media links. The application can be operated via the console or through a simple web interface. Users enter a URL and select a desired mode (e.g., ‚ÄúContact‚Äù), after which the page is analyzed. Thanks to the integration of the OpenAI API, the tool can generate intelligent summaries of the website‚Äôs content. I especially enjoyed implementing the recursive logic and combining data extraction with AI-powered analysis. I also explored jest for javascript testing.",
  "wstext": "A recursive web scraper that scrapes websites and can generate AI-powered summaries.",
  "nmtext": "Stay on top of the sentiment in your relevant news ‚Äî with Newsmood, it's easy. This web app can search for relevant news based on keywords, analyze sentiment, and even export the results to Excel. Naturally, it also features responsive design and user authentication.",
  "nmDescription": "Newsmood is a web app that scans news based on user-defined keywords and performs sentiment analysis on relevant articles. The frontend is built with Next.js, while the backend relies on a Python API that runs a custom-trained LSTM model in PyTorch. More details are available in the Newsmood app.",
  "nmLearning": "This project was especially rewarding. I gained hands-on experience with deep learning, guided by concepts from the book 'Dive into Deep Learning'. My goal was to truly understand how these models work. On the web development side, I built a responsive Next.js app with user authentication and MongoDB integration. NewsAPI was used to fetch real-time news content."
}